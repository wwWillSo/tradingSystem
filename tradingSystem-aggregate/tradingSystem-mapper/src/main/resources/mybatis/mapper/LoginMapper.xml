<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.szw.trading.mybatis.mapper.LoginMapper">
  <resultMap id="BaseResultMap" type="com.szw.trading.mybatis.entity.Login">
    <id column="login_id" jdbcType="INTEGER" property="loginId" />
    <result column="login_name" jdbcType="VARCHAR" property="loginName" />
    <result column="login_password" jdbcType="VARCHAR" property="loginPassword" />
    <result column="login_account_status" jdbcType="INTEGER" property="loginAccountStatus" />
    <result column="customer_id" jdbcType="INTEGER" property="customerId" />
    <result column="admin" jdbcType="BIT" property="admin" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="agent_id" jdbcType="INTEGER" property="agentId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    login_id, login_name, login_password, login_account_status, customer_id, admin, create_time, 
    agent_id
  </sql>
  <select id="selectByExample" parameterType="com.szw.trading.mybatis.entity.LoginExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from login
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from login
    where login_id = #{loginId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from login
    where login_id = #{loginId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.szw.trading.mybatis.entity.Login">
    insert into login (login_id, login_name, login_password, 
      login_account_status, customer_id, admin, 
      create_time, agent_id)
    values (#{loginId,jdbcType=INTEGER}, #{loginName,jdbcType=VARCHAR}, #{loginPassword,jdbcType=VARCHAR}, 
      #{loginAccountStatus,jdbcType=INTEGER}, #{customerId,jdbcType=INTEGER}, #{admin,jdbcType=BIT}, 
      #{createTime,jdbcType=TIMESTAMP}, #{agentId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.szw.trading.mybatis.entity.Login">
    insert into login
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="loginId != null">
        login_id,
      </if>
      <if test="loginName != null">
        login_name,
      </if>
      <if test="loginPassword != null">
        login_password,
      </if>
      <if test="loginAccountStatus != null">
        login_account_status,
      </if>
      <if test="customerId != null">
        customer_id,
      </if>
      <if test="admin != null">
        admin,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="agentId != null">
        agent_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="loginId != null">
        #{loginId,jdbcType=INTEGER},
      </if>
      <if test="loginName != null">
        #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="loginPassword != null">
        #{loginPassword,jdbcType=VARCHAR},
      </if>
      <if test="loginAccountStatus != null">
        #{loginAccountStatus,jdbcType=INTEGER},
      </if>
      <if test="customerId != null">
        #{customerId,jdbcType=INTEGER},
      </if>
      <if test="admin != null">
        #{admin,jdbcType=BIT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="agentId != null">
        #{agentId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.szw.trading.mybatis.entity.LoginExample" resultType="java.lang.Long">
    select count(*) from login
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update login
    <set>
      <if test="record.loginId != null">
        login_id = #{record.loginId,jdbcType=INTEGER},
      </if>
      <if test="record.loginName != null">
        login_name = #{record.loginName,jdbcType=VARCHAR},
      </if>
      <if test="record.loginPassword != null">
        login_password = #{record.loginPassword,jdbcType=VARCHAR},
      </if>
      <if test="record.loginAccountStatus != null">
        login_account_status = #{record.loginAccountStatus,jdbcType=INTEGER},
      </if>
      <if test="record.customerId != null">
        customer_id = #{record.customerId,jdbcType=INTEGER},
      </if>
      <if test="record.admin != null">
        admin = #{record.admin,jdbcType=BIT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.agentId != null">
        agent_id = #{record.agentId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update login
    set login_id = #{record.loginId,jdbcType=INTEGER},
      login_name = #{record.loginName,jdbcType=VARCHAR},
      login_password = #{record.loginPassword,jdbcType=VARCHAR},
      login_account_status = #{record.loginAccountStatus,jdbcType=INTEGER},
      customer_id = #{record.customerId,jdbcType=INTEGER},
      admin = #{record.admin,jdbcType=BIT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      agent_id = #{record.agentId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.szw.trading.mybatis.entity.Login">
    update login
    <set>
      <if test="loginName != null">
        login_name = #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="loginPassword != null">
        login_password = #{loginPassword,jdbcType=VARCHAR},
      </if>
      <if test="loginAccountStatus != null">
        login_account_status = #{loginAccountStatus,jdbcType=INTEGER},
      </if>
      <if test="customerId != null">
        customer_id = #{customerId,jdbcType=INTEGER},
      </if>
      <if test="admin != null">
        admin = #{admin,jdbcType=BIT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="agentId != null">
        agent_id = #{agentId,jdbcType=INTEGER},
      </if>
    </set>
    where login_id = #{loginId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.szw.trading.mybatis.entity.Login">
    update login
    set login_name = #{loginName,jdbcType=VARCHAR},
      login_password = #{loginPassword,jdbcType=VARCHAR},
      login_account_status = #{loginAccountStatus,jdbcType=INTEGER},
      customer_id = #{customerId,jdbcType=INTEGER},
      admin = #{admin,jdbcType=BIT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      agent_id = #{agentId,jdbcType=INTEGER}
    where login_id = #{loginId,jdbcType=INTEGER}
  </update>
</mapper>